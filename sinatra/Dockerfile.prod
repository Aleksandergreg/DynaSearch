# Stage 1: Builder – install gems and assets
FROM ruby:3.2-slim AS builder

# Install build tools and dependencies for building gems.
# Pin the package versions as determined:
# - build-essential version 12.9
# - libsqlite3-dev version 3.40.1-2+deb12u1
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
      build-essential=12.9 \
      libsqlite3-dev=3.40.1-2+deb12u1 && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Gemfile and Gemfile.lock, then install gems
# Pin bundler to version 2.6.3 as per Gemfile.lock
COPY Gemfile Gemfile.lock ./
RUN gem install bundler:2.6.3 && bundle install --without development test

# Copy application source code
COPY . .

# Stage 2: Final image – only includes runtime necessities
FROM ruby:3.2-slim

# Install runtime dependencies (no build tools).
# Pin libsqlite3-0 version to 3.40.1-2+deb12u1
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
      libsqlite3-0=3.40.1-2+deb12u1 && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user and group for security
RUN groupadd -r appuser && useradd -r -g appuser -d /app -s /sbin/nologin -c "Application user" appuser

WORKDIR /app

# Copy app code and gem bundles from builder stage
COPY --from=builder /app .
COPY --from=builder /usr/local/bundle /usr/local/bundle

# Change ownership of the application files and gems to the non-root user
# This ensures the user can read/execute necessary files
RUN chown -R appuser:appuser /app /usr/local/bundle

# Set environment to production
ENV RACK_ENV=production

# Expose the port used by the Sinatra app
EXPOSE 4568

# Switch to the non-root user before running the application
USER appuser

# Use exec form to run the Sinatra app in production
CMD ["bundle", "exec", "ruby", "app.rb", "-o", "0.0.0.0", "-p", "4568"]