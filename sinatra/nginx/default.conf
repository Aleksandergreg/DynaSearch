# --- HTTP Server Block (Redirects to HTTPS) ---
server {
    listen 80;
    listen [::]:80;
    server_name dynasearch.dk www.dynasearch.dk; 

    # Serve Let's Encrypt ACME challenge files (still needed for renewal)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # Permanent redirect for all other requests
        return 301 https://$host$request_uri;
    }
}

# --- HTTPS Server Block ---
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dynasearch.dk www.dynasearch.dk; 

    # --- SSL Configuration ---
    # Paths match the certbot volume mount and Let's Encrypt structure
    ssl_certificate /etc/letsencrypt/live/dynasearch.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dynasearch.dk/privkey.pem;

    # Include recommended SSL parameters (important for security!)
    # Create this file or paste content directly here.
    # Example source: https://ssl-config.mozilla.org/
    # Or include snippets often provided by certbot/nginx docs
    # e.g., include /etc/letsencrypt/options-ssl-nginx.conf; # If using Certbot's recommended options
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # Add strong ciphers, DH params, etc. This is a minimal example.

    # --- Optional Security Headers ---
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # --- End Security Headers ---

    location / {
        proxy_pass http://app:4568; # Same proxy pass as before
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Set X-Forwarded-Proto correctly for HTTPS
        proxy_set_header X-Forwarded-Proto $scheme; # $scheme will be 'https' here
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}